!function(e){function t(s){if(r[s])return r[s].exports;var a=r[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var r={};t.m=e,t.c=r,t.d=function(e,r,s){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:s})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(t.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var a in e)t.d(s,a,function(t){return e[t]}.bind(null,a));return s},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,"a",r),r},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=1)}([function(){},function(e,t,r){"use strict";r.r(t);r(0);var s=function(){function e(e){this.classesForm={wrapperClass:"checkform-wrapper",formClass:"checkform-form",blockClass:"block",errorClass:"block__error",labelClass:"block__label",btnClass:"checkform-btn",focusClass:"js-input-focus",blockErrorClass:"error",blockGoodClass:"good",maskClass:"mask"},this.validObj={nicknameReg:/^[a-zA-Z]/,nicknameMinLength:1,nicknameMaxLength:15,fullNameReg:/^[a-zA-Z]/,fullNameMinLength:1,fullNameMaxLength:15,emailReg:/^[a-zA-Z]/,emailMinLength:1,passwordReg:/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^\w\s]).{6,}/,dateReg:/^\d{4}[./-]\d{2}[./-]\d{2}$/,telReg:/^(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$/,telMinLength:1,telMaxLength:20,fileSize:10025711,fileType:"image",bankNumber:/(?<=^|[^0-9])[0-9]{16}(?=[^0-9]|$)|[0-9]{4}[-| |_][0-9]{4}[-| |_][0-9]{4}[-| |_][0-9]{4}/,bankDate:/^\d{2}[.]\d{2}$/,bankBackNum:/^\d{3}/},this.options=e,this.wrapperClasses()}return e.prototype.wrapperClasses=function(){var e=document.querySelector("."+this.classesForm.wrapperClass);!0===this.options.errorMessages?e.classList.add("error-show"):e.classList.remove("error-show")},e.prototype.showError=function(e){var t=e.parentElement;t.classList.contains("mask")&&(t=t.parentElement),t.classList.remove(""+this.classesForm.blockGoodClass),t.classList.add(""+this.classesForm.blockErrorClass)},e.prototype.hideError=function(e){var t=e.parentElement;t.classList.contains("mask")&&(t=t.parentElement),t.classList.remove(""+this.classesForm.blockErrorClass),t.classList.add(""+this.classesForm.blockGoodClass)},e}(),a=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(t,r)};return function(t,r){function s(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(s.prototype=r.prototype,new s)}}(),o=function(e){function t(t){var r=e.call(this,t)||this;return r.maskInputs=document.querySelectorAll(".checkform__mask"),r.maskedNumber="XdDmMyY9",r.setupMask(),r.activateMask(),r}return a(t,e),t.prototype.setupMask=function(){for(var e=0;e<this.maskInputs.length;e++)this.createMask(this.maskInputs[e])},t.prototype.createMask=function(e){var t=e.getAttribute("placeholder");e.setAttribute("maxlength",""+t.length),e.setAttribute("data-placeholder",t),e.removeAttribute("placeholder");var r='<span class="'+this.classesForm.maskClass+'">\n      <span aria-hidden="true" id="'+e.id+'Mask"><i></i>'+t+"</span>"+e.outerHTML+"</span>";e.outerHTML=r},t.prototype.activateMask=function(){this.handleValueChange=this.handleValueChange.bind(this),this.maskInputs=document.querySelectorAll(".mask .checkform__mask");for(var e=0;e<this.maskInputs.length;e++)this.maskInputs[e].addEventListener("keyup",this.handleValueChange)},t.prototype.handleValueChange=function(e){var t=e.srcElement,r=t.id;switch(e.keyCode){case 20:case 17:case 18:case 16:case 37:case 38:case 39:case 40:case 9:return}t.value=""+this.handleCurrentValue(e),document.getElementById(r+"Mask").innerHTML=this.setValueMask(e)},t.prototype.handleCurrentValue=function(e){for(var t=e.target,r=t.getAttribute("data-placeholder"),s=t.value,a=r.length,o="",n=s.replace(/\D/g,""),i=0,c=0;i<a;i++){var l=!isNaN(parseInt(n[c],10)),u=0<=this.maskedNumber.indexOf(r[i]);if(u&&l)o+=n[c++];else{if(u&&!l)return o;o+=r[i]}}return o},t.prototype.setValueMask=function(e){var t=e.target,r=t.value;return"<i>+7"+r+"</i>"+t.getAttribute("data-placeholder").substr(r.length)},t}(s),n=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(t,r)};return function(t,r){function s(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(s.prototype=r.prototype,new s)}}(),i=function(e){function t(){return null!==e&&e.apply(this,arguments)||this}return n(t,e),t.prototype.customValid=function(){this.options.customValid?this.validObj=Object.assign(this.validObj,this.options.customValid):console.log("nothing to custom in validObj")},t.prototype.customClassesForm=function(){this.options.customClassesForm?this.classesForm=Object.assign(this.classesForm,this.options.customClassesForm):console.log("nothing to custom in classesForm")},t}(o),c=function(){var e=function(t,r){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var r in t)Object.prototype.hasOwnProperty.call(t,r)&&(e[r]=t[r])})(t,r)};return function(t,r){function s(){this.constructor=t}e(t,r),t.prototype=null===r?Object.create(r):(s.prototype=r.prototype,new s)}}();new(function(e){function t(t){var r=e.call(this,t)||this;return r.customClassesForm(),r.customValid(),r.setup(),r}return c(t,e),t.prototype.setup=function(){var e=document.querySelector("."+this.classesForm.btnClass);this.validation=this.validation.bind(this),e.addEventListener("click",this.validation)},t.prototype.regCheck=function(e,t,r,s,a){void 0===s&&(s=0),void 0===a&&(a=1e3),e.length<s||e.length>a?this.showError(t):r.test(e)?(this.hideError(t),this.checkSubstring(t,e),this.checkBlackList(t,e)):this.showError(t)},t.prototype.checkSubstring=function(e,t){for(var r=0;r<this.options.checkSubstr.length;r++)this.options.checkSubstr[r].id===e.getAttribute("id")&&(t.includes(this.options.checkSubstr[r].substr)?this.hideError(e):this.showError(e))},t.prototype.checkBlackList=function(e,t){for(var r=0;r<this.options.blackList.length;r++)t.includes(this.options.blackList[r])&&this.showError(e)},t.prototype.validation=function(e){var t=this;e.preventDefault(),document.querySelectorAll("[data-valid=true]").forEach((function(e){var r=e.value;switch(e.id){case"nickname":var s=new RegExp(t.validObj.nicknameReg),a=t.validObj.nicknameMinLength,o=t.validObj.nicknameMaxLength;t.regCheck(r,e,s,a,o);break;case"fullname":s=new RegExp(t.validObj.fullNameReg),a=t.validObj.fullNameMinLength,o=t.validObj.fullNameMaxLength;t.regCheck(r,e,s,a,o);break;case"email":s=new RegExp(t.validObj.emailReg),a=t.validObj.emailMinLength;t.regCheck(r,e,s,a);break;case"password":s=new RegExp(t.validObj.passwordReg);t.regCheck(r,e,s);break;case"date":s=new RegExp(t.validObj.dateReg);t.regCheck(r,e,s);break;case"tel":s=new RegExp(t.validObj.telReg),a=t.validObj.telMinLength,o=t.validObj.telMaxLength;t.regCheck(r,e,s,a,o);break;case"checkbox":e.checked?t.hideError(e):t.showError(e);break;case"file":var n=e.files[0];""===r?t.showError(e):n.type.startsWith(t.validObj.fileType)?t.hideError(e):(t.showError(e),!(n.size<t.validObj.fileSize)&&t.showError(e));break;case"textarea":""===r?t.showError(e):(t.hideError(e),t.checkSubstring(e,r));break;case"bankCardNumber":s=new RegExp(t.validObj.bankNumber),o=19,a=12;t.regCheck(r,e,s,a,o);break;case"bankDate":s=new RegExp(t.validObj.bankDate),a=4;t.regCheck(r,e,s,a);break;case"bankBackNum":s=new RegExp(t.validObj.bankBackNum),a=3,o=3;t.regCheck(r,e,s,a,o)}}))},t}(i))({customValid:{nicknameReg:/^[a-zA-Z]/,nicknameMaxLength:11},errorMessages:!0,customClassesForm:{wrapperClass:"checkform-wrapper",formClass:"checkform-form",blockClass:"block",errorClass:"block__error",labelClass:"block__label",btnClass:"checkform-btn",focusClass:"js-input-focus"},checkSubstr:[{id:"nickname",substr:"karim"},{id:"email",substr:"k4r1"}],blackList:["lol","kek"]})}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,