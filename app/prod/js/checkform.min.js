class CheckForm {validObj={nickname:{reg:/^[a-zA-Z]/,minLength:1,maxLength:15},fullName:{reg:/^[а-яА-ЯёЁ]/,minLength:1,maxLength:15},email:{reg:/^(?!.*@.*@.*$)(?!.*@.*--.*..*$)(?!.*@.*-..*$)(?!.*@.*-$)(.*@.+(..{1,11})?)$/,minLength:1,},password:{reg:/^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[^\w\s]).{6,}/,},date:{reg:/^\d{4}[./-]\d{2}[./-]\d{2}$/,},tel:{reg:/^((8|\+7)[\- ]?)?(\(?\d{3}\)?[\- ]?)?[\d\- ]{7,10}$/,minLength:1,maxLength:20},file:{size:10025711,type:"image",},};constructor(el,options){this.el=document.querySelector(el);this.options=options;this.render();this.setup();};get validObj(){return this.validObj;};set validObj(obj){this.validObj=obj;};getTemplate(inputs=[],textarea=[],btn=[],error=false,formClass="validator-form",blockClass="block",errorClass="block__error",labelClass="block__label"){const input=inputs.map(i=>{if(error){return `<div class="${blockClass}"><div class="${errorClass} error-${i.id}">${i.error}</div><input class="validator ${i.class} ${i.id}"data-type="${i.id}"data-valid="true"type="${i.type}"placeholder="${i.placeholder}"id="${i.id}"/><label class="${labelClass} label-${i.id}"for="${i.id}">${i.label}</label></div>`}else{return `<div class="${blockClass}"><input class="validator ${i.class} ${i.id}"data-type="${i.id}"data-valid="true"type="${i.type}"placeholder="${i.placeholder}"id="${i.id}"/><label class="${labelClass} label-${i.id}"for="${i.id}">${i.label}</label></div>`}});const text=textarea.map(i=>{if(error){return `<div class="${blockClass}"><div class="${errorClass} error-${i.id}">${i.error}</div><textarea class="validator block__input ${i.class}"data-valid="true"placeholder="${i.placeholder}"id="${i.id}"></textarea><label class="${labelClass} label-${i.id}"for="${i.id}">${i.label}</label></div>`}else{return `<div class="${blockClass}"><textarea class="validator block__input ${i.class}"data-valid="true"placeholder="${i.placeholder}"id="${i.id}"></textarea><label class="${labelClass}label-${i.id}"for="${i.id}">${i.label}</label></div>`}});const button=btn.map(i=>{return `<button class="validator-btn ${i.class}"type="${i.type}">${i.text}</button>`});return `<form class="${formClass}"method="POST">${input.join('')}${text.join('')}${button.join('')}</form>`;};useForm(){return true};render(){const{inputs,textarea,btn,errorMessages,formClass,blockClass,errorClass,labelClass}=this.options;const{custom}=this.options;const{renderForm}=this.options;this.customObject(custom);if(renderForm){this.el.innerHTML=this.getTemplate(inputs,textarea,btn,errorMessages,formClass,blockClass,errorClass,labelClass);}else{this.useForm();}};setup(){this.focusBlurHandler=this.focusBlurHandler.bind(this);const inputsList=document.querySelectorAll(".validator");inputsList.forEach(i=>{i.addEventListener('focus',this.focusBlurHandler),i.addEventListener('blur',this.focusBlurHandler)});const btn=document.querySelector(".validator-btn");this.clickHandler=this.clickHandler.bind(this);btn.addEventListener('click',this.clickHandler);};focusBlurHandler(event){const input=event.target;switch(event.type){case"focus":if(input.id=="date")input.type="date";input.classList.add("js-input-focus");break;case"blur":if(input.value!=""){input.classList.add("js-input-focus");}else{if(input.id=="date"){input.type="text";}input.classList.remove("js-input-focus");}break;default:break;}};cycleObj(name,key,value){for(const z in this.validObj){if(this.validObj.hasOwnProperty(z)){for(const y in this.validObj[z]){if(this.validObj[z].hasOwnProperty(y)) {if(z===name)if(y===key)this.validObj[z][y]=value;}}}}};customObject(custom){for(let i=0;i<custom.length;i++){for(const j in custom[i]){if(custom[i].hasOwnProperty(j)){for(const k in custom[i][j]){if(custom[i][j].hasOwnProperty(k)){this.cycleObj(j,k,custom[i][j][k])}}}}}};showErrorMessage(block){let parent=block.parentElement;if(this.options.errorClass){if(parent.querySelector('.'+this.options.errorClass)){let errorBlock=parent.querySelector('.'+this.options.errorClass);errorBlock.style.opacity='1';block.classList.add("error");block.classList.remove("good");}else{block.classList.add("error");block.classList.remove("good");}}else{if(parent.querySelector('.block__error')){let errorBlock=parent.querySelector('.block__error');errorBlock.style.opacity='1';block.classList.add("error");block.classList.remove("good");}else{block.classList.add("error");block.classList.remove("good");}}};hideErrorMessage(block){let parent=block.parentElement;if(this.options.errorClass){if(parent.querySelector('.'+this.options.errorClass)){let errorBlock=parent.querySelector('.'+this.options.errorClass);errorBlock.style.opacity='0';block.classList.remove("error");block.classList.add("good");}else{block.classList.remove("error");block.classList.add("good");}}else{if(parent.querySelector('.block__error')){let errorBlock=parent.querySelector('.block__error');errorBlock.style.opacity='0';block.classList.remove("error");block.classList.add("good");}else{block.classList.remove("error");block.classList.add("good");}}};regCheck(val,block,reg,minLength=0,maxLength=1000){if(val.length<minLength||val.length>maxLength){this.showErrorMessage(block);}else{if(!reg.test(val)){this.showErrorMessage(block);}else{this.hideErrorMessage(block);this.checkSubstring(block,val);this.checkBlackList(block,val);}}};checkSubstring(block,val){for(let i=0;i<this.options.checkSubstr.length;i++){if(this.options.checkSubstr[i].id===block.getAttribute("id")){if(val.includes(this.options.checkSubstr[i].substr)){this.hideErrorMessage(block);}else{this.showErrorMessage(block);}}else{return true}}}checkBlackList(block,val){for(let i=0;i<this.options.blackList.length;i++){if(val.includes(this.options.blackList[i])){this.showErrorMessage(block);}}}clickHandler(event){event.preventDefault();const inputsList=document.querySelectorAll("[data-valid=true]");inputsList.forEach(block=>{let val=block.value;switch(block.getAttribute("id")){case"nickname":let nicknameReg=new RegExp(this.validObj.nickname.reg);this.regCheck(val,block,nicknameReg,this.validObj.nickname.minLength,this.validObj.nickname.maxLength);break;case"fullname":let nameReg=new RegExp(this.validObj.fullName.reg);this.regCheck(val,block,nameReg,this.validObj.fullName.minLength,this.validObj.fullName.maxLength);break;case"email":let emailReg=new RegExp(this.validObj.email.reg);this.regCheck(val,block,emailReg,this.validObj.email.minLength,this.validObj.email.maxLength);break;case"password":let passwordReg=new RegExp(this.validObj.password.reg);this.regCheck(val,block,passwordReg);break;case"date":let dateReg=new RegExp(this.validObj.date.reg);this.regCheck(val,block,dateReg);break;case"tel":let telReg=new RegExp(this.validObj.tel.reg);this.regCheck(val,block,telReg,this.validObj.tel.minLength,this.validObj.tel.maxLength);break;case"checkbox":if(!block.checked){this.showErrorMessage(block);}else{this.hideErrorMessage(block);}break;case"file":let file=block.files[0];if(val===""){this.showErrorMessage(block);}else if(!file.type.startsWith(this.validObj.file.type)){this.showErrorMessage(block);if(!(file.size<this.validObj.file.size)){this.showErrorMessage(block);}}else{this.hideErrorMessage(block);}break;case"textarea":if(val==="") {this.showErrorMessage(block);}else{this.hideErrorMessage(block);this.checkSubstring(block,val);}break;default:}});};validOk(funcName){document.querySelector('.validator-btn').addEventListener('click',function(){const inputsList=document.querySelectorAll("[data-valid=true]");const goodInputs=document.querySelectorAll(".good");if(inputsList.length===goodInputs.length){funcName();}else return false})}};
